{"ast":null,"code":"var _jsxFileName = \"D:\\\\AimMore GPT\\\\aimmore-gpt\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [value, setValue] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [previousChats, setPreviousChats] = useState([]);\n  const [currentTitle, setCurrentTitle] = useState(null);\n  const getMessages = async () => {\n    const options = {\n      method: 'POST',\n      body: JSON.stringify({\n        message: value\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const response = await fetch('http://localhost:6969/completions', options);\n      const data = await response.json();\n      console.log(data);\n      setMessage(data.choices[0].message);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      getMessages();\n    }\n  };\n  useEffect(() => {\n    console.log(currentTitle, value, message);\n    if (!currentTitle && value && message) {\n      setCurrentTitle(value);\n    }\n    if (currentTitle && value && message) {\n      setPreviousChats(prevChats => [...prevChats, {\n        title: currentTitle,\n        role: 'user',\n        content: value\n      }, {\n        title: currentTitle,\n        role: message.role,\n        content: message.content\n      }]);\n    }\n  }, [currentTitle, value, message]);\n  console.log(previousChats);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gpt-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"side-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+ New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"history\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Common!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"With \\u2764\\uFE0F\\uFE0F by @aimmore\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"main\",\n      children: [!currentTitle && /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"logo\",\n        children: \"AimMore GPT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttom-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: value,\n            onChange: e => setValue(e.target.value),\n            onKeyPress: handleKeyPress // Modified to trigger getMessages() on Enter key press\n            ,\n            placeholder: \"Enter a Text here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"submit\",\n            onClick: getMessages,\n            children: \"\\u27A2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"info\",\n          children: \"This is AI-enabled chat app, using OpenAI's GPT-3. The API is licensed under OpenAI's API policy to @aimmore.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9WYKqOll1nj2EK2vvXRqQ0Y7iCY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","value","setValue","message","setMessage","previousChats","setPreviousChats","currentTitle","setCurrentTitle","getMessages","options","method","body","JSON","stringify","headers","response","fetch","data","json","console","log","choices","error","handleKeyPress","e","key","prevChats","title","role","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","onKeyPress","placeholder","id","onClick","_c","$RefreshReg$"],"sources":["D:/AimMore GPT/aimmore-gpt/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst App = () => {\n  const [value, setValue] = useState(null)\n  const [message, setMessage] = useState(null)\n  const [previousChats, setPreviousChats] = useState([])\n  const [currentTitle, setCurrentTitle] = useState(null)\n\n  const getMessages = async () => {\n    const options = {\n      method: 'POST',\n      body: JSON.stringify({\n        message: value\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n    try {\n      const response = await fetch('http://localhost:6969/completions', options)\n      const data = await response.json()\n      console.log(data)\n      setMessage(data.choices[0].message)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      getMessages()\n    }\n  }\n\n  useEffect(() => {\n    console.log(currentTitle, value, message)\n    if (!currentTitle && value && message) {\n      setCurrentTitle(value)\n    }\n    if (currentTitle && value && message) {\n      setPreviousChats(prevChats => [\n        ...prevChats,\n        {\n          title: currentTitle,\n          role: 'user',\n          content: value\n        },\n        {\n          title: currentTitle,\n          role: message.role,\n          content: message.content\n        }\n      ])\n    }\n  }, [currentTitle, value, message])\n\n  console.log(previousChats)\n\n  return (\n    <div className=\"gpt-app\">\n      <section className=\"side-bar\">\n        <button>+ New Chat</button>\n        <ul className=\"history\">\n          <li>Common!</li>\n        </ul>\n        <nav>\n          <p>With ❤️️ by @aimmore</p>\n        </nav>\n      </section>\n      <section className=\"main\">\n        {!currentTitle && <h1 className=\"logo\">AimMore GPT</h1>}\n        <ul className=\"feed\"></ul>\n        <div className=\"buttom-section\">\n          <div className=\"input-container\">\n            <input\n              value={value}\n              onChange={(e) => setValue(e.target.value)}\n              onKeyPress={handleKeyPress} // Modified to trigger getMessages() on Enter key press\n              placeholder=\"Enter a Text here\"\n            />\n            <div id=\"submit\" onClick={getMessages}>\n              ➢\n            </div>\n          </div>\n          <p className=\"info\">\n            This is AI-enabled chat app, using OpenAI's GPT-3.\n            The API is licensed under OpenAI's API policy to @aimmore.\n          </p>\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBX,OAAO,EAAEF;MACX,CAAC,CAAC;MACFc,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IACD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAEP,OAAO,CAAC;MAC1E,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjBd,UAAU,CAACc,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,CAACnB,OAAO,CAAC;IACrC,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMC,cAAc,GAAIC,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACrBjB,WAAW,CAAC,CAAC;IACf;EACF,CAAC;EAEDb,SAAS,CAAC,MAAM;IACdwB,OAAO,CAACC,GAAG,CAACd,YAAY,EAAEN,KAAK,EAAEE,OAAO,CAAC;IACzC,IAAI,CAACI,YAAY,IAAIN,KAAK,IAAIE,OAAO,EAAE;MACrCK,eAAe,CAACP,KAAK,CAAC;IACxB;IACA,IAAIM,YAAY,IAAIN,KAAK,IAAIE,OAAO,EAAE;MACpCG,gBAAgB,CAACqB,SAAS,IAAI,CAC5B,GAAGA,SAAS,EACZ;QACEC,KAAK,EAAErB,YAAY;QACnBsB,IAAI,EAAE,MAAM;QACZC,OAAO,EAAE7B;MACX,CAAC,EACD;QACE2B,KAAK,EAAErB,YAAY;QACnBsB,IAAI,EAAE1B,OAAO,CAAC0B,IAAI;QAClBC,OAAO,EAAE3B,OAAO,CAAC2B;MACnB,CAAC,CACF,CAAC;IACJ;EACF,CAAC,EAAE,CAACvB,YAAY,EAAEN,KAAK,EAAEE,OAAO,CAAC,CAAC;EAElCiB,OAAO,CAACC,GAAG,CAAChB,aAAa,CAAC;EAE1B,oBACEP,OAAA;IAAKiC,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBlC,OAAA;MAASiC,SAAS,EAAC,UAAU;MAAAC,QAAA,gBAC3BlC,OAAA;QAAAkC,QAAA,EAAQ;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3BtC,OAAA;QAAIiC,SAAS,EAAC,SAAS;QAAAC,QAAA,eACrBlC,OAAA;UAAAkC,QAAA,EAAI;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eACLtC,OAAA;QAAAkC,QAAA,eACElC,OAAA;UAAAkC,QAAA,EAAG;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACVtC,OAAA;MAASiC,SAAS,EAAC,MAAM;MAAAC,QAAA,GACtB,CAACzB,YAAY,iBAAIT,OAAA;QAAIiC,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvDtC,OAAA;QAAIiC,SAAS,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1BtC,OAAA;QAAKiC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BlC,OAAA;UAAKiC,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BlC,OAAA;YACEG,KAAK,EAAEA,KAAM;YACboC,QAAQ,EAAGZ,CAAC,IAAKvB,QAAQ,CAACuB,CAAC,CAACa,MAAM,CAACrC,KAAK,CAAE;YAC1CsC,UAAU,EAAEf,cAAe,CAAC;YAAA;YAC5BgB,WAAW,EAAC;UAAmB;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,eACFtC,OAAA;YAAK2C,EAAE,EAAC,QAAQ;YAACC,OAAO,EAAEjC,WAAY;YAAAuB,QAAA,EAAC;UAEvC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNtC,OAAA;UAAGiC,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAC;QAGpB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAApC,EAAA,CA1FKD,GAAG;AAAA4C,EAAA,GAAH5C,GAAG;AA4FT,eAAeA,GAAG;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}